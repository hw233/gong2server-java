package com.gamejelly.gong2.utils.aot;

import com.gamejelly.gong2.gas.entity.ServantEntity;
import com.gamejelly.gong2.gas.entity.MonsterEntity;

public class PropDataExecutor {

	private static int parseInt(double d){ 
		return ((Number)d).intValue(); 
	} 

	private static long toLong(Number d){ 
		return d.longValue(); 
	}
	private static float toFloat(Number d){
		return d.floatValue();
	}

	private static int toInt(Number d){
		return d.intValue();
	}

	private static double toDouble(Number d){
		return d.doubleValue();
	}
	public static void calcAll(ServantEntity v){ 
		int lv = v.getLv();
		int basAtk = v.getBasAtk();
		float basPreAtk = v.getBasPreAtk();
		int basDef = v.getBasDef();
		float basPreDef = v.getBasPreDef();
		int basDpower = v.getBasDpower();
		float basPreDpower = v.getBasPreDpower();
		int basHp = v.getBasHp();
		float basPreHp = v.getBasPreHp();
		int basCp = v.getBasCp();
		float basCri = v.getBasCri();
		float basDcri = v.getBasDcri();
		int basFocus = v.getBasFocus();
		float basDparry = v.getBasDparry();
		float basParry = v.getBasParry();
		int basTen = v.getBasTen();
		int basPen = v.getBasPen();
		int basDeHIT = v.getBasDeHIT();
		int basEahit = v.getBasEahit();
		float basPreDeepen = v.getBasPreDeepen();
		float basPreEase = v.getBasPreEase();
		float bufAtk = v.getBufAtk();
		float bufPreAtk = v.getBufPreAtk();
		float bufDef = v.getBufDef();
		float bufPreDef = v.getBufPreDef();
		float bufDpower = v.getBufDpower();
		float bufPreDpower = v.getBufPreDpower();
		float bufHp = v.getBufHp();
		float bufPreHp = v.getBufPreHp();
		float bufCp = v.getBufCp();
		float bufCri = v.getBufCri();
		float bufDcri = v.getBufDcri();
		float bufFocus = v.getBufFocus();
		float bufDparry = v.getBufDparry();
		float bufParry = v.getBufParry();
		float bufTen = v.getBufTen();
		float bufPen = v.getBufPen();
		float bufDeHIT = v.getBufDeHIT();
		float bufEahit = v.getBufEahit();
		float bufPreDeepen = v.getBufPreDeepen();
		float bufPreEase = v.getBufPreEase();
		float rankAtk = v.getRankAtk();
		float rankDef = v.getRankDef();
		float rankDpower = v.getRankDpower();
		float rankHp = v.getRankHp();
		float equAtk = v.getEquAtk();
		float equDef = v.getEquDef();
		float equDpower = v.getEquDpower();
		float equHp = v.getEquHp();
		float skillDamegeAdd = v.getSkillDamegeAdd();
		float skillDamegeProb = v.getSkillDamegeProb();
		float atkLv = v.getAtkLv();
		float defLv = v.getDefLv();
		float dpowerLv = v.getDpowerLv();
		float hpLv = v.getHpLv();
		v.setTotAtk( toLong(basAtk+atkLv*lv+rankAtk+equAtk) );
		long totAtk = v.getTotAtk();
		v.setTotPreAtk( toFloat(basPreAtk+1) );
		float totPreAtk = v.getTotPreAtk();
		v.setTotDef( toLong(basDef+defLv*lv+rankDef+equDef) );
		long totDef = v.getTotDef();
		v.setTotPreDef( toFloat(basPreDef+1) );
		float totPreDef = v.getTotPreDef();
		v.setTotDpower( toLong(basDpower+rankDpower+equDpower+dpowerLv*lv) );
		long totDpower = v.getTotDpower();
		v.setTotPreDpower( toFloat(basPreDpower+1) );
		float totPreDpower = v.getTotPreDpower();
		v.setTotHp( toLong(basHp+rankHp+equHp+lv*hpLv) );
		long totHp = v.getTotHp();
		v.setTotPreHp( toFloat(basPreHp+1) );
		float totPreHp = v.getTotPreHp();
		v.setTotCp( toLong(basCp) );
		long totCp = v.getTotCp();
		v.setTotCri( toFloat(basCri) );
		float totCri = v.getTotCri();
		v.setTotDcri( toFloat(basDcri) );
		float totDcri = v.getTotDcri();
		v.setTotFocus( toLong(basFocus+0.5) );
		long totFocus = v.getTotFocus();
		v.setTotDparry( toFloat(basDparry) );
		float totDparry = v.getTotDparry();
		v.setTotParry( toFloat(basParry) );
		float totParry = v.getTotParry();
		v.setTotTen( toLong(basTen+0.3) );
		long totTen = v.getTotTen();
		v.setTotPen( toLong(basPen) );
		long totPen = v.getTotPen();
		v.setTotDeHIT( toLong(basDeHIT) );
		long totDeHIT = v.getTotDeHIT();
		v.setTotEahit( toLong(basEahit) );
		long totEahit = v.getTotEahit();
		v.setTotPreDeepen( toFloat(basPreDeepen) );
		float totPreDeepen = v.getTotPreDeepen();
		v.setTotPreEase( toFloat(basPreEase) );
		float totPreEase = v.getTotPreEase();
		v.setDisAtk( toFloat(totAtk*totPreAtk) );
		float disAtk = v.getDisAtk();
		v.setDisDef( toFloat(totDef*totPreDef) );
		float disDef = v.getDisDef();
		v.setDisDpower( toFloat(totDpower*totPreDpower) );
		float disDpower = v.getDisDpower();
		v.setDisHp( toFloat(totHp*totPreHp) );
		float disHp = v.getDisHp();
		v.setDisCri( toFloat(totCri) );
		float disCri = v.getDisCri();
		v.setDisDcri( toFloat(totDcri) );
		float disDcri = v.getDisDcri();
		v.setDisFocus( toFloat(totFocus) );
		float disFocus = v.getDisFocus();
		v.setDisDparry( toFloat(totDparry) );
		float disDparry = v.getDisDparry();
		v.setDisParry( toFloat(totParry) );
		float disParry = v.getDisParry();
		v.setDisTen( toFloat(totTen) );
		float disTen = v.getDisTen();
		v.setDisPen( toFloat(totPen) );
		float disPen = v.getDisPen();
		v.setDisDeHIT( toFloat(totDeHIT) );
		float disDeHIT = v.getDisDeHIT();
		v.setDisEahit( toFloat(totEahit) );
		float disEahit = v.getDisEahit();
		v.setDisPreDeepen( toFloat(totPreDeepen) );
		float disPreDeepen = v.getDisPreDeepen();
		v.setDisPreEase( toFloat(totPreEase) );
		float disPreEase = v.getDisPreEase();
		v.setCriProb( toLong(totFocus+bufFocus) );
		long criProb = v.getCriProb();
		v.setParryProb( toLong(totTen+bufTen) );
		long parryProb = v.getParryProb();
		v.setFinalAtk( toLong((disAtk+bufAtk)*(1+bufPreAtk)) );
		long finalAtk = v.getFinalAtk();
		v.setFinalDef( toLong((disDef+bufDef)*(1+bufPreDef)) );
		long finalDef = v.getFinalDef();
		v.setFinalDpower( toLong((disDpower+bufDpower)*(1+bufPreDpower)) );
		long finalDpower = v.getFinalDpower();
		v.setFinalHp( toLong((disHp+bufHp)*(1+bufPreHp)) );
		long finalHp = v.getFinalHp();
		v.setFinalPen( toLong(disPen+bufPen) );
		long finalPen = v.getFinalPen();
		v.setFinalDeHIT( toLong(disDeHIT+bufDeHIT) );
		long finalDeHIT = v.getFinalDeHIT();
		v.setFinalEahit( toLong(disEahit+bufEahit) );
		long finalEahit = v.getFinalEahit();
		v.setFinalPreDeepen( toFloat(disPreDeepen+bufPreDeepen) );
		float finalPreDeepen = v.getFinalPreDeepen();
		v.setFinalPreEase( toFloat(disPreEase+bufPreEase) );
		float finalPreEase = v.getFinalPreEase();
		v.setFinalCp( toLong(totCp) );
		long finalCp = v.getFinalCp();
	}
	public static void calcAll(MonsterEntity v){ 
		int lv = v.getLv();
		int basAtk = v.getBasAtk();
		float basPreAtk = v.getBasPreAtk();
		int basDef = v.getBasDef();
		float basPreDef = v.getBasPreDef();
		int basDpower = v.getBasDpower();
		float basPreDpower = v.getBasPreDpower();
		int basHp = v.getBasHp();
		float basPreHp = v.getBasPreHp();
		int basCp = v.getBasCp();
		float basCri = v.getBasCri();
		float basDcri = v.getBasDcri();
		int basFocus = v.getBasFocus();
		float basDparry = v.getBasDparry();
		float basParry = v.getBasParry();
		int basTen = v.getBasTen();
		int basPen = v.getBasPen();
		int basDeHIT = v.getBasDeHIT();
		int basEahit = v.getBasEahit();
		float basPreDeepen = v.getBasPreDeepen();
		float basPreEase = v.getBasPreEase();
		float bufAtk = v.getBufAtk();
		float bufPreAtk = v.getBufPreAtk();
		float bufDef = v.getBufDef();
		float bufPreDef = v.getBufPreDef();
		float bufDpower = v.getBufDpower();
		float bufPreDpower = v.getBufPreDpower();
		float bufHp = v.getBufHp();
		float bufPreHp = v.getBufPreHp();
		float bufCp = v.getBufCp();
		float bufCri = v.getBufCri();
		float bufDcri = v.getBufDcri();
		float bufFocus = v.getBufFocus();
		float bufDparry = v.getBufDparry();
		float bufParry = v.getBufParry();
		float bufTen = v.getBufTen();
		float bufPen = v.getBufPen();
		float bufDeHIT = v.getBufDeHIT();
		float bufEahit = v.getBufEahit();
		float bufPreDeepen = v.getBufPreDeepen();
		float bufPreEase = v.getBufPreEase();
		float rankAtk = v.getRankAtk();
		float rankDef = v.getRankDef();
		float rankDpower = v.getRankDpower();
		float rankHp = v.getRankHp();
		float equAtk = v.getEquAtk();
		float equDef = v.getEquDef();
		float equDpower = v.getEquDpower();
		float equHp = v.getEquHp();
		float skillDamegeAdd = v.getSkillDamegeAdd();
		float skillDamegeProb = v.getSkillDamegeProb();
		float atkLv = v.getAtkLv();
		float defLv = v.getDefLv();
		float dpowerLv = v.getDpowerLv();
		float hpLv = v.getHpLv();
		v.setTotAtk( toLong(basAtk+atkLv*lv+rankAtk+equAtk) );
		long totAtk = v.getTotAtk();
		v.setTotPreAtk( toFloat(basPreAtk+1) );
		float totPreAtk = v.getTotPreAtk();
		v.setTotDef( toLong(basDef+defLv*lv+rankDef+equDef) );
		long totDef = v.getTotDef();
		v.setTotPreDef( toFloat(basPreDef+1) );
		float totPreDef = v.getTotPreDef();
		v.setTotDpower( toLong(basDpower+rankDpower+equDpower+dpowerLv*lv) );
		long totDpower = v.getTotDpower();
		v.setTotPreDpower( toFloat(basPreDpower+1) );
		float totPreDpower = v.getTotPreDpower();
		v.setTotHp( toLong(basHp+rankHp+equHp+lv*hpLv) );
		long totHp = v.getTotHp();
		v.setTotPreHp( toFloat(basPreHp+1) );
		float totPreHp = v.getTotPreHp();
		v.setTotCp( toLong(basCp) );
		long totCp = v.getTotCp();
		v.setTotCri( toFloat(basCri) );
		float totCri = v.getTotCri();
		v.setTotDcri( toFloat(basDcri) );
		float totDcri = v.getTotDcri();
		v.setTotFocus( toLong(basFocus+0.5) );
		long totFocus = v.getTotFocus();
		v.setTotDparry( toFloat(basDparry) );
		float totDparry = v.getTotDparry();
		v.setTotParry( toFloat(basParry) );
		float totParry = v.getTotParry();
		v.setTotTen( toLong(basTen+0.3) );
		long totTen = v.getTotTen();
		v.setTotPen( toLong(basPen) );
		long totPen = v.getTotPen();
		v.setTotDeHIT( toLong(basDeHIT) );
		long totDeHIT = v.getTotDeHIT();
		v.setTotEahit( toLong(basEahit) );
		long totEahit = v.getTotEahit();
		v.setTotPreDeepen( toFloat(basPreDeepen) );
		float totPreDeepen = v.getTotPreDeepen();
		v.setTotPreEase( toFloat(basPreEase) );
		float totPreEase = v.getTotPreEase();
		v.setDisAtk( toFloat(totAtk*totPreAtk) );
		float disAtk = v.getDisAtk();
		v.setDisDef( toFloat(totDef*totPreDef) );
		float disDef = v.getDisDef();
		v.setDisDpower( toFloat(totDpower*totPreDpower) );
		float disDpower = v.getDisDpower();
		v.setDisHp( toFloat(totHp*totPreHp) );
		float disHp = v.getDisHp();
		v.setDisCri( toFloat(totCri) );
		float disCri = v.getDisCri();
		v.setDisDcri( toFloat(totDcri) );
		float disDcri = v.getDisDcri();
		v.setDisFocus( toFloat(totFocus) );
		float disFocus = v.getDisFocus();
		v.setDisDparry( toFloat(totDparry) );
		float disDparry = v.getDisDparry();
		v.setDisParry( toFloat(totParry) );
		float disParry = v.getDisParry();
		v.setDisTen( toFloat(totTen) );
		float disTen = v.getDisTen();
		v.setDisPen( toFloat(totPen) );
		float disPen = v.getDisPen();
		v.setDisDeHIT( toFloat(totDeHIT) );
		float disDeHIT = v.getDisDeHIT();
		v.setDisEahit( toFloat(totEahit) );
		float disEahit = v.getDisEahit();
		v.setDisPreDeepen( toFloat(totPreDeepen) );
		float disPreDeepen = v.getDisPreDeepen();
		v.setDisPreEase( toFloat(totPreEase) );
		float disPreEase = v.getDisPreEase();
		v.setCriProb( toLong(totFocus+bufFocus) );
		long criProb = v.getCriProb();
		v.setParryProb( toLong(totTen+bufTen) );
		long parryProb = v.getParryProb();
		v.setFinalAtk( toLong((disAtk+bufAtk)*(1+bufPreAtk)) );
		long finalAtk = v.getFinalAtk();
		v.setFinalDef( toLong((disDef+bufDef)*(1+bufPreDef)) );
		long finalDef = v.getFinalDef();
		v.setFinalDpower( toLong((disDpower+bufDpower)*(1+bufPreDpower)) );
		long finalDpower = v.getFinalDpower();
		v.setFinalHp( toLong((disHp+bufHp)*(1+bufPreHp)) );
		long finalHp = v.getFinalHp();
		v.setFinalPen( toLong(disPen+bufPen) );
		long finalPen = v.getFinalPen();
		v.setFinalDeHIT( toLong(disDeHIT+bufDeHIT) );
		long finalDeHIT = v.getFinalDeHIT();
		v.setFinalEahit( toLong(disEahit+bufEahit) );
		long finalEahit = v.getFinalEahit();
		v.setFinalPreDeepen( toFloat(disPreDeepen+bufPreDeepen) );
		float finalPreDeepen = v.getFinalPreDeepen();
		v.setFinalPreEase( toFloat(disPreEase+bufPreEase) );
		float finalPreEase = v.getFinalPreEase();
		v.setFinalCp( toLong(totCp) );
		long finalCp = v.getFinalCp();
	}}